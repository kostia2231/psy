<div
    class="w-full min-h-[50vh] rounded_top z-12 yellow min-[600px]:top-0 sticky"
>
    <div
        class="p-10 flex flex-col gap-10 slide-in max-[600px]:px-5 max-[600px]:py-10"
    >
        <h1>Мені близькі такі теми:</h1>
        <div
            class="text w-full grid grid-cols-2 gap-20 max-[600px]:flex max-[600px]:flex-col max-[600px]:gap-5"
        >
            <div class="flex flex-col w-[50wv] gap-5">
                <p class="text-animate-container-together">
                    • налагодження зв'язку с собою, своїми бажаннями та
                    потребами;
                </p>

                <p class="text-animate-container-together">
                    • вимушена міграція, складнощі адаптації в новій країні;
                </p>
                <p class="text-animate-container-together">
                    • депресія, тривожність, панічні атаки;
                </p>
                <p class="text-animate-container-together">
                    • стосунки (в парі, дружні стосунки);
                </p>
                <p class="text-animate-container-together">
                    • вибудовування особистісних кордонів;
                </p>
            </div>
            <div class="flex flex-col w-[50wv] gap-5">
                <p class="text-animate-container-together">
                    • складності у відносинах з батьками та теми сепарації;
                </p>
                <p class="text-animate-container-together">
                    • жіноча ідентичність, сексуальність, самоцінність;
                </p>
                <p class="text-animate-container-together">
                    • гроші, конкуренція, агресія.
                </p>
            </div>
        </div>
    </div>
</div>

<script is:inline>
    // gsap.registerPlugin(ScrollTrigger, SplitText);
    CustomEase.create("myEase", "0.27, 0.51, 0.32, 0.99");

    window.addEventListener("load", () => {
        const containers = document.querySelectorAll(
            ".text-animate-container-together",
        );
        const allLines = [];
        const splitInstances = [];

        containers.forEach((container) => {
            const children = container.hasAttribute("data-copy-wrapper")
                ? Array.from(container.children)
                : [container];

            children.forEach((el) => {
                const split = new SplitText(el, {
                    type: "lines",
                    linesClass: "text-anim++",
                    mask: "lines",
                });

                splitInstances.push(split);
                allLines.push(...split.lines);

                const textIndent = getComputedStyle(el).textIndent;
                if (textIndent === "0px" && split.lines.length > 0) {
                    split.lines[0].style.paddingLeft = textIndent;
                    el.style.textIndent = "0";
                }
            });
        });

        gsap.set(allLines, { y: "100%" });

        gsap.to(allLines, {
            y: "0%",
            duration: 0.8,
            stagger: 0.06,
            ease: "myEase",
            delay: 0.3,
            scrollTrigger: {
                trigger: containers[0],
                start: "top 95%",
                once: true,
                // markers: true,
            },
        });

        // window.addEventListener("beforeunload", () => {
        //     splitInstances.forEach((split) => split.revert());
        // });
    });
</script>
